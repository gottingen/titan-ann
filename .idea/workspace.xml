<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="tann" targetName="tann" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug">
        <ADDITIONAL_GENERATION_ENVIRONMENT>
          <envs>
            <env name="CONDA_PREFIX" value="$USER_HOME$/miniconda3/envs/tann-dev/" />
          </envs>
        </ADDITIONAL_GENERATION_ENVIRONMENT>
      </configuration>
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2364ff41-cbf3-458c-bb36-09223523b48f" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/bakCMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/carbin_cxx_config.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/carbin_deps.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/carbin_module.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/carbin_option.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/CompileProto.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_cc_benchmark.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_cc_binary.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_cc_library.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_cc_test.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_check.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_color.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_config_cxx_opts.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_include.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_install_dirs.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_outof_source.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_package_generator.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_package_rpm.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_pkg_dump.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_platform.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_print.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_print_list.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/modules/carbin_variable.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/package/carbin_config.cmake.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/package/pkg_dump_template.pc.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/package/postinst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/package/postrm" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/package/preinst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/package/prerm" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/FindAIO.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/FindCUDA.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/FindJemalloc.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/FindMKL.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findbenchmark.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findboost.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findc-ares.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findgflags.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findglog.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findgmock.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findgperftools.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findgtest.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findleveldb.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findprotobuf.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/Findsnappy.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_benchmark.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_gflags.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_gmock.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_gtest.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_leveldb.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_openssl.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_pcre.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_rocksdb.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake/recipes/require_turbo.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/conda/conda_build_config.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/conda/cpu/bld.bat" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/conda/cpu/bld.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/conda/cpu/meta.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/conda/environment_linux.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/conda/gpu/bld.bat" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/conda/gpu/bld.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/conda/gpu/meta.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/copts/carbin_generated_copts.bzl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/copts/carbin_generated_copts.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/CPM_v0380.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/FindArm.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake/simd/FindArm.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/FindAvx.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake/simd/FindAvx.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/FindMKL.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/FindSSE.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake/simd/FindSSE.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/FindTurbo.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/Googletest/CMakeLists.txt.in" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/Googletest/DownloadGTest.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/ParseAndAddCatchTests.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/Simd.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake/carbin_simd.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/TurboDll.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/TurboHelpers.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/deps.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/gtest.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/install_test_project/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/install_test_project/simple.cc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/install_test_project/test.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/turboConfig.cmake.in" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMake/utils.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/copts/configure_copts.bzl" beforeDir="false" afterPath="$PROJECT_DIR$/copts/configure_copts.bzl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/copts/copts.py" beforeDir="false" afterPath="$PROJECT_DIR$/copts/copts.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/copts/generate_copts.py" beforeDir="false" afterPath="$PROJECT_DIR$/copts/generate_copts.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tann/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/tann/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tann/aligned_file_reader.h" beforeDir="false" afterPath="$PROJECT_DIR$/tann/aligned_file_reader.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tann/math_utils.cc" beforeDir="false" afterPath="$PROJECT_DIR$/tann/math_utils.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tann/pq.cc" beforeDir="false" afterPath="$PROJECT_DIR$/tann/pq.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/tests/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/utils/compute_groundtruth.cc" beforeDir="false" afterPath="$PROJECT_DIR$/tests/utils/compute_groundtruth.cc" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="1.1" />
  </component>
  <component name="ProjectId" id="2PbwsBHvOAwr67VI9bD7alBWF5R" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "last_opened_file_path": "/home/ubuntu/github/gottingen/titan-ann/CMake",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "CMakeSettings",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/CMake" />
    </key>
  </component>
  <component name="RunManager">
    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tann" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="tann" TARGET_NAME="tann" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2364ff41-cbf3-458c-bb36-09223523b48f" name="Changes" comment="" />
      <created>1683739294531</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1683739294531</updated>
      <workItem from="1683739296651" duration="994000" />
      <workItem from="1683745055368" duration="1539000" />
      <workItem from="1683826420747" duration="7500000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticEditVcpkgJson value="false" />
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticFoundErrors value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>